{"ast":null,"code":"var _jsxFileName = \"D:\\\\semester5\\\\fer\\\\Project\\\\src\\\\components\\\\Banner.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../css/banner.css\";\nimport { Container } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Banner = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [selectedVideo, setSelectedVideo] = useState(\"\");\n  const [selectedImage, setSelectedImage] = useState(\"\");\n\n  // Define video and image sources with keywords\n  const videoSources = [{\n    src: \"./video/video1.mp4\",\n    keyword: \"khu-vuon-ngon-tu\"\n  }, {\n    src: \"./video/video2.mp4\",\n    keyword: \"one-piece-film-red\"\n  }, {\n    src: \"./video/video3.mp4\",\n    keyword: \"toi-thang-cap-mot-minh\"\n  }];\n  const imageSources = [{\n    src: \"./images/title1.png\",\n    keyword: \"khu-vuon-ngon-tu\"\n  }, {\n    src: \"./images/title2.png\",\n    keyword: \"one-piece-film-red\"\n  }, {\n    src: \"./images/title3.png\",\n    keyword: \"toi-thang-cap-mot-minh\"\n  }];\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        // Fetch movies data for each video source keyword\n        const requests = videoSources.map(video => axios.get(`https://phim.nguonc.com/api/films/search?keyword=${video.keyword}`));\n        const responses = await axios.all(requests);\n\n        // Combine all movies into a single array\n        let allMovies = [];\n        responses.forEach(response => {\n          allMovies = [...allMovies, ...response.data.items];\n        });\n\n        // Set movies state with all fetched movies\n        setMovies(allMovies);\n        if (allMovies.length > 0) {\n          // Select a random movie from the fetched movies\n          const randomIndex = Math.floor(Math.random() * allMovies.length);\n          const selectedMovie = allMovies[randomIndex];\n          setSelectedMovie(selectedMovie);\n\n          // Find corresponding video and image based on selected movie's name\n          const selectedVideo = videoSources.find(video => video.keyword === selectedMovie.slug);\n          setSelectedVideo(selectedVideo ? selectedVideo.src : videoSources[randomIndex].src);\n          const selectedImage = imageSources.find(image => image.keyword === selectedMovie.slug);\n          setSelectedImage(selectedImage ? selectedImage.src : imageSources[randomIndex].src);\n          console.log(\"Selected Movie:\", selectedMovie);\n          console.log(\"Selected Video:\", selectedVideo);\n          console.log(\"Selected Image:\", selectedImage);\n        }\n      } catch (error) {\n        console.error(\"Error fetching movies:\", error);\n      }\n    };\n\n    // Call fetchMovies function when component mounts\n    fetchMovies();\n  }, []); // Empty dependency array ensures useEffect runs only once on mount\n\n  // Render null if selectedVideo, selectedImage, or selectedMovie is null or undefined\n  if (!selectedVideo || !selectedImage || !selectedMovie) {\n    return null;\n  }\n\n  // Render banner component with selected video, image, and movie details\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"banner-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      autoPlay: true,\n      loop: true,\n      muted: true,\n      playsInline: true,\n      className: \"background-clip\",\n      children: [/*#__PURE__*/_jsxDEV(\"source\", {\n        src: selectedVideo,\n        type: \"video/mp4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), \"Your browser does not support the video tag.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"description\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"banner-logo\",\n          src: selectedImage,\n          alt: \"abc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: selectedMovie.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: selectedMovie.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn play-btn\",\n          to: `/`,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-play-fill\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), \" Start\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn detail-btn\",\n          to: `/film/${sele}`,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-info-circle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), \" Detail\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(Banner, \"87WWyVNoKdVsvdU6IB0hu9VRJMg=\");\n_c = Banner;\nexport default Banner;\nvar _c;\n$RefreshReg$(_c, \"Banner\");","map":{"version":3,"names":["React","useState","useEffect","Container","axios","Link","jsxDEV","_jsxDEV","Banner","_s","movies","setMovies","selectedMovie","setSelectedMovie","selectedVideo","setSelectedVideo","selectedImage","setSelectedImage","videoSources","src","keyword","imageSources","fetchMovies","requests","map","video","get","responses","all","allMovies","forEach","response","data","items","length","randomIndex","Math","floor","random","find","slug","image","console","log","error","className","children","autoPlay","loop","muted","playsInline","type","fileName","_jsxFileName","lineNumber","columnNumber","alt","name","description","to","sele","_c","$RefreshReg$"],"sources":["D:/semester5/fer/Project/src/components/Banner.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"../css/banner.css\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Banner = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [selectedMovie, setSelectedMovie] = useState(null);\r\n  const [selectedVideo, setSelectedVideo] = useState(\"\");\r\n  const [selectedImage, setSelectedImage] = useState(\"\");\r\n\r\n  // Define video and image sources with keywords\r\n  const videoSources = [\r\n    { src: \"./video/video1.mp4\", keyword: \"khu-vuon-ngon-tu\" },\r\n    { src: \"./video/video2.mp4\", keyword: \"one-piece-film-red\" },\r\n    { src: \"./video/video3.mp4\", keyword: \"toi-thang-cap-mot-minh\" },\r\n  ];\r\n\r\n  const imageSources = [\r\n    { src: \"./images/title1.png\", keyword: \"khu-vuon-ngon-tu\" },\r\n    { src: \"./images/title2.png\", keyword: \"one-piece-film-red\" },\r\n    { src: \"./images/title3.png\", keyword: \"toi-thang-cap-mot-minh\" },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const fetchMovies = async () => {\r\n      try {\r\n        // Fetch movies data for each video source keyword\r\n        const requests = videoSources.map((video) =>\r\n          axios.get(\r\n            `https://phim.nguonc.com/api/films/search?keyword=${video.keyword}`\r\n          )\r\n        );\r\n        const responses = await axios.all(requests);\r\n\r\n        // Combine all movies into a single array\r\n        let allMovies = [];\r\n        responses.forEach((response) => {\r\n          allMovies = [...allMovies, ...response.data.items];\r\n        });\r\n\r\n        // Set movies state with all fetched movies\r\n        setMovies(allMovies);\r\n\r\n        if (allMovies.length > 0) {\r\n          // Select a random movie from the fetched movies\r\n          const randomIndex = Math.floor(Math.random() * allMovies.length);\r\n          const selectedMovie = allMovies[randomIndex];\r\n          setSelectedMovie(selectedMovie);\r\n\r\n          // Find corresponding video and image based on selected movie's name\r\n          const selectedVideo = videoSources.find(\r\n            (video) => video.keyword === selectedMovie.slug\r\n          );\r\n          setSelectedVideo(\r\n            selectedVideo ? selectedVideo.src : videoSources[randomIndex].src\r\n          );\r\n\r\n          const selectedImage = imageSources.find(\r\n            (image) => image.keyword === selectedMovie.slug\r\n          );\r\n          setSelectedImage(\r\n            selectedImage ? selectedImage.src : imageSources[randomIndex].src\r\n          );\r\n\r\n          console.log(\"Selected Movie:\", selectedMovie);\r\n          console.log(\"Selected Video:\", selectedVideo);\r\n          console.log(\"Selected Image:\", selectedImage);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching movies:\", error);\r\n      }\r\n    };\r\n\r\n    // Call fetchMovies function when component mounts\r\n    fetchMovies();\r\n  }, []); // Empty dependency array ensures useEffect runs only once on mount\r\n\r\n  // Render null if selectedVideo, selectedImage, or selectedMovie is null or undefined\r\n  if (!selectedVideo || !selectedImage || !selectedMovie) {\r\n    return null;\r\n  }\r\n\r\n  // Render banner component with selected video, image, and movie details\r\n  return (\r\n    <div className=\"banner-container\">\r\n      <video autoPlay loop muted playsInline className=\"background-clip\">\r\n        <source src={selectedVideo} type=\"video/mp4\" />\r\n        Your browser does not support the video tag.\r\n      </video>\r\n\r\n      <Container>\r\n        <div className=\"description\">\r\n          <img className=\"banner-logo\" src={selectedImage} alt=\"abc\" />\r\n          <h2>{selectedMovie.name}</h2>\r\n          <p>{selectedMovie.description}</p>\r\n          <Link className=\"btn play-btn\" to={`/`}>\r\n            <i className=\"bi bi-play-fill\"></i> Start\r\n          </Link>\r\n          <Link className=\"btn detail-btn\" to={`/film/${sele}`}>\r\n            <i className=\"bi bi-info-circle\"></i> Detail\r\n          </Link>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}