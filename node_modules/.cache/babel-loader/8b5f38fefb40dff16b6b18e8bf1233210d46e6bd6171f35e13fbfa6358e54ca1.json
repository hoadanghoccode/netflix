{"ast":null,"code":"var _jsxFileName = \"D:\\\\semester5\\\\fer\\\\Project\\\\src\\\\components\\\\Management.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport useAuth from \"../hooks/useAuth\";\nimport AdminDashboard from \"./AdminDashboard\";\nimport Homepage from \"./Homepage\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Management = () => {\n  _s();\n  const {\n    auth\n  } = useAuth();\n  const navigate = useNavigate();\n  useEffect(() => {\n    // If the role is not defined, navigate to the error page or login page\n    if (!auth.role) {\n      navigate(\"/error\"); // Or \"/login\" depending on your routing logic\n    }\n  }, [auth.role, navigate]);\n\n  // Render the component based on the user's role\n  if (auth.role === \"admin\") {\n    return /*#__PURE__*/_jsxDEV(AdminDashboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  } else if (auth.role === \"user\") {\n    return /*#__PURE__*/_jsxDEV(Homepage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  } else {\n    return null; // Optionally render a loading indicator or message\n  }\n};\n_s(Management, \"Up6Y/4/YU8WTl8Y1sp4q23iv+hs=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = Management;\nexport default Management;\nvar _c;\n$RefreshReg$(_c, \"Management\");","map":{"version":3,"names":["React","useEffect","Container","Row","Col","useAuth","AdminDashboard","Homepage","useNavigate","jsxDEV","_jsxDEV","Management","_s","auth","navigate","role","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/semester5/fer/Project/src/components/Management.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport useAuth from \"../hooks/useAuth\";\r\nimport AdminDashboard from \"./AdminDashboard\";\r\nimport Homepage from \"./Homepage\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Management = () => {\r\n  const { auth } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // If the role is not defined, navigate to the error page or login page\r\n    if (!auth.role) {\r\n      navigate(\"/error\"); // Or \"/login\" depending on your routing logic\r\n    }\r\n  }, [auth.role, navigate]);\r\n\r\n  // Render the component based on the user's role\r\n  if (auth.role === \"admin\") {\r\n    return <AdminDashboard />;\r\n  } else if (auth.role === \"user\") {\r\n    return <Homepage />;\r\n  } else {\r\n    return null; // Optionally render a loading indicator or message\r\n  }\r\n};\r\n\r\nexport default Management;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AACrD,OAAOC,OAAO,MAAM,kBAAkB;AACtC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM;IAAEC;EAAK,CAAC,GAAGR,OAAO,CAAC,CAAC;EAC1B,MAAMS,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAE9BP,SAAS,CAAC,MAAM;IACd;IACA,IAAI,CAACY,IAAI,CAACE,IAAI,EAAE;MACdD,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;IACtB;EACF,CAAC,EAAE,CAACD,IAAI,CAACE,IAAI,EAAED,QAAQ,CAAC,CAAC;;EAEzB;EACA,IAAID,IAAI,CAACE,IAAI,KAAK,OAAO,EAAE;IACzB,oBAAOL,OAAA,CAACJ,cAAc;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC3B,CAAC,MAAM,IAAIN,IAAI,CAACE,IAAI,KAAK,MAAM,EAAE;IAC/B,oBAAOL,OAAA,CAACH,QAAQ;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACrB,CAAC,MAAM;IACL,OAAO,IAAI,CAAC,CAAC;EACf;AACF,CAAC;AAACP,EAAA,CAnBID,UAAU;EAAA,QACGN,OAAO,EACPG,WAAW;AAAA;AAAAY,EAAA,GAFxBT,UAAU;AAqBhB,eAAeA,UAAU;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}