{"ast":null,"code":"var _jsxFileName = \"D:\\\\semester5\\\\fer\\\\Project\\\\src\\\\components\\\\Comment.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Col, Container, Form, Row } from \"react-bootstrap\";\nimport { Link, useParams } from \"react-router-dom\";\nimport useAuth from \"../hooks/useAuth\";\nimport \"../css/comment.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Comment = () => {\n  _s();\n  const [comment, setComment] = useState(\"\");\n  const [comments, setComments] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [editCommentId, setEditCommentId] = useState(null);\n  const [editCommentContent, setEditCommentContent] = useState(\"\");\n  const {\n    id\n  } = useParams();\n  const {\n    userId\n  } = useAuth();\n  const [replyCommentId, setReplyCommentId] = useState(null);\n  const [replyContent, setReplyContent] = useState(\"\");\n  const getUserIdFromLocalStorage = () => {\n    return localStorage.getItem(\"userId\");\n  };\n  const handleSave = async e => {\n    e.preventDefault();\n    if (getUserIdFromLocalStorage() == null) {\n      alert(\"You need login to comment\");\n    } else {\n      try {\n        const response = await axios.post(\"http://localhost:9999/comments\", {\n          user_id: userId,\n          blog_id: parseInt(id),\n          content: comment,\n          parent_id: null\n        });\n        console.log(\"New comment created:\", response.data);\n        setComment(\"\");\n        fetchComments(); // Fetch the updated comments list\n      } catch (error) {\n        console.error(\"There was a problem with the axios operation:\", error);\n      }\n    }\n  };\n  const handleReplySave = async e => {\n    e.preventDefault();\n    if (getUserIdFromLocalStorage() == null) {\n      alert(\"You need login to comment\");\n    } else {\n      try {\n        const response = await axios.post(\"http://localhost:9999/comments\", {\n          user_id: userId,\n          blog_id: parseInt(id),\n          content: replyContent,\n          parent_id: replyCommentId\n        });\n        console.log(\"New reply created:\", response.data);\n        setReplyContent(\"\");\n        setReplyCommentId(null);\n        fetchComments(); // Fetch the updated comments list\n      } catch (error) {\n        console.error(\"There was a problem with the axios operation:\", error);\n      }\n    }\n  };\n  const handleDelete = async commentId => {\n    if (window.confirm(\"Are you sure you want to delete this comment?\")) {\n      try {\n        await axios.delete(`http://localhost:9999/comments/${commentId}`);\n        console.log(\"Comment deleted\");\n        fetchComments(); // Fetch the updated comments list\n      } catch (error) {\n        console.error(\"There was a problem with the axios operation:\", error);\n      }\n    }\n  };\n  const handleEdit = comment => {\n    setEditCommentId(comment.id);\n    setEditCommentContent(comment.content);\n  };\n  const handleUpdate = async e => {\n    e.preventDefault();\n    try {\n      await axios.put(`http://localhost:9999/comments/${editCommentId}`, {\n        user_id: userId,\n        blog_id: parseInt(id),\n        content: editCommentContent\n      });\n      console.log(\"Comment updated\");\n      setEditCommentId(null);\n      setEditCommentContent(\"\");\n      fetchComments(); // Fetch the updated comments list\n    } catch (error) {\n      console.error(\"There was a problem with the axios operation:\", error);\n    }\n  };\n  const fetchComments = async () => {\n    try {\n      const response = await axios.get(`http://localhost:9999/comments/?blog_id=${id}`);\n      const comments = response.data;\n      const nestedComments = nestComments(comments);\n      setComments(nestedComments);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const nestComments = comments => {\n    const commentMap = {};\n    comments.forEach(comment => commentMap[comment.id] = comment);\n    const nestedComments = [];\n    comments.forEach(comment => {\n      if (comment.parent_id !== null) {\n        const parent = commentMap[comment.parent_id];\n        parent.replies = parent.replies || [];\n        parent.replies.push(comment);\n      } else {\n        nestedComments.push(comment);\n      }\n    });\n    return nestedComments;\n  };\n  useEffect(() => {\n    fetchComments();\n  }, [id]);\n  useEffect(() => {\n    axios.get(\"http://localhost:9999/users\").then(response => {\n      setUsers(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSave,\n      className: \"my-3\",\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicComment\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Comment here......\",\n          value: comment,\n          onChange: e => setComment(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"comment-list\",\n      style: {\n        color: \"white\"\n      },\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(CommentItem, {\n        comment: comment,\n        users: users,\n        userId: userId,\n        handleEdit: handleEdit,\n        handleDelete: handleDelete,\n        handleUpdate: handleUpdate,\n        setEditCommentId: setEditCommentId,\n        editCommentId: editCommentId,\n        editCommentContent: editCommentContent,\n        setEditCommentContent: setEditCommentContent,\n        setReplyCommentId: setReplyCommentId,\n        replyCommentId: replyCommentId,\n        replyContent: replyContent,\n        setReplyContent: setReplyContent,\n        handleReplySave: handleReplySave\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n};\n_s(Comment, \"ypTyiu8Ukb+6pvm/Sg4JwcV73fM=\", false, function () {\n  return [useParams, useAuth];\n});\n_c = Comment;\nconst CommentItem = ({\n  comment,\n  users,\n  userId,\n  handleEdit,\n  handleDelete,\n  handleUpdate,\n  setEditCommentId,\n  editCommentId,\n  editCommentContent,\n  setEditCommentContent,\n  setReplyCommentId,\n  replyCommentId,\n  replyContent,\n  setReplyContent,\n  handleReplySave\n}) => {\n  const user = users.find(user => user.id === comment.user_id);\n  const isUserComment = userId === comment.user_id;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"comment-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"../images/defaultuser.png\",\n      alt: \"avatar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-infor\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"aqua\"\n        },\n        children: user ? user.name : \"Unknown User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), editCommentId === comment.id ? /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleUpdate,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formEditComment\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: editCommentContent,\n            onChange: e => setEditCommentContent(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setEditCommentId(null),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: comment.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this), isUserComment && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              style: {\n                marginRight: \"10px\"\n              },\n              onClick: () => handleEdit(comment),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              onClick: () => handleDelete(comment.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(Link, {\n        onClick: () => setReplyCommentId(comment.id),\n        children: \"Reply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), replyCommentId === comment.id && /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleReplySave,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formReplyComment\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Reply here...\",\n            value: replyContent,\n            onChange: e => setReplyContent(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Post Reply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this), comment.replies && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"comment-list\",\n        style: {\n          marginLeft: \"20px\"\n        },\n        children: comment.replies.map(reply => /*#__PURE__*/_jsxDEV(CommentItem, {\n          comment: reply,\n          users: users,\n          userId: userId,\n          handleEdit: handleEdit,\n          handleDelete: handleDelete,\n          handleUpdate: handleUpdate,\n          setEditCommentId: setEditCommentId,\n          editCommentId: editCommentId,\n          editCommentContent: editCommentContent,\n          setEditCommentContent: setEditCommentContent,\n          setReplyCommentId: setReplyCommentId,\n          replyCommentId: replyCommentId,\n          replyContent: replyContent,\n          setReplyContent: setReplyContent,\n          handleReplySave: handleReplySave\n        }, reply.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this)]\n  }, comment.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n};\n_c2 = CommentItem;\nexport default Comment;\nvar _c, _c2;\n$RefreshReg$(_c, \"Comment\");\n$RefreshReg$(_c2, \"CommentItem\");","map":{"version":3,"names":["axios","React","useEffect","useState","Button","Col","Container","Form","Row","Link","useParams","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","Comment","_s","comment","setComment","comments","setComments","users","setUsers","editCommentId","setEditCommentId","editCommentContent","setEditCommentContent","id","userId","replyCommentId","setReplyCommentId","replyContent","setReplyContent","getUserIdFromLocalStorage","localStorage","getItem","handleSave","e","preventDefault","alert","response","post","user_id","blog_id","parseInt","content","parent_id","console","log","data","fetchComments","error","handleReplySave","handleDelete","commentId","window","confirm","delete","handleEdit","handleUpdate","put","get","nestedComments","nestComments","commentMap","forEach","parent","replies","push","then","catch","children","onSubmit","className","Group","controlId","Control","type","placeholder","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","style","color","map","CommentItem","_c","user","find","isUserComment","src","alt","name","onClick","marginRight","marginLeft","reply","_c2","$RefreshReg$"],"sources":["D:/semester5/fer/Project/src/components/Comment.js"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Button, Col, Container, Form, Row } from \"react-bootstrap\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport useAuth from \"../hooks/useAuth\";\r\nimport \"../css/comment.css\";\r\n\r\nconst Comment = () => {\r\n  const [comment, setComment] = useState(\"\");\r\n  const [comments, setComments] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [editCommentId, setEditCommentId] = useState(null);\r\n  const [editCommentContent, setEditCommentContent] = useState(\"\");\r\n  const { id } = useParams();\r\n  const { userId } = useAuth();\r\n  const [replyCommentId, setReplyCommentId] = useState(null);\r\n  const [replyContent, setReplyContent] = useState(\"\");\r\n\r\n  const getUserIdFromLocalStorage = () => {\r\n    return localStorage.getItem(\"userId\");\r\n  };\r\n\r\n  const handleSave = async (e) => {\r\n    e.preventDefault();\r\n    if (getUserIdFromLocalStorage() == null) {\r\n      alert(\"You need login to comment\");\r\n    } else {\r\n      try {\r\n        const response = await axios.post(\"http://localhost:9999/comments\", {\r\n          user_id: userId,\r\n          blog_id: parseInt(id),\r\n          content: comment,\r\n          parent_id: null,\r\n        });\r\n        console.log(\"New comment created:\", response.data);\r\n        setComment(\"\");\r\n        fetchComments(); // Fetch the updated comments list\r\n      } catch (error) {\r\n        console.error(\"There was a problem with the axios operation:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleReplySave = async (e) => {\r\n    e.preventDefault();\r\n    if (getUserIdFromLocalStorage() == null) {\r\n      alert(\"You need login to comment\");\r\n    } else {\r\n      try {\r\n        const response = await axios.post(\"http://localhost:9999/comments\", {\r\n          user_id: userId,\r\n          blog_id: parseInt(id),\r\n          content: replyContent,\r\n          parent_id: replyCommentId,\r\n        });\r\n        console.log(\"New reply created:\", response.data);\r\n        setReplyContent(\"\");\r\n        setReplyCommentId(null);\r\n        fetchComments(); // Fetch the updated comments list\r\n      } catch (error) {\r\n        console.error(\"There was a problem with the axios operation:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (commentId) => {\r\n    if (window.confirm(\"Are you sure you want to delete this comment?\")) {\r\n      try {\r\n        await axios.delete(`http://localhost:9999/comments/${commentId}`);\r\n        console.log(\"Comment deleted\");\r\n        fetchComments(); // Fetch the updated comments list\r\n      } catch (error) {\r\n        console.error(\"There was a problem with the axios operation:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleEdit = (comment) => {\r\n    setEditCommentId(comment.id);\r\n    setEditCommentContent(comment.content);\r\n  };\r\n\r\n  const handleUpdate = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.put(`http://localhost:9999/comments/${editCommentId}`, {\r\n        user_id: userId,\r\n        blog_id: parseInt(id),\r\n        content: editCommentContent,\r\n      });\r\n      console.log(\"Comment updated\");\r\n      setEditCommentId(null);\r\n      setEditCommentContent(\"\");\r\n      fetchComments(); // Fetch the updated comments list\r\n    } catch (error) {\r\n      console.error(\"There was a problem with the axios operation:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchComments = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://localhost:9999/comments/?blog_id=${id}`\r\n      );\r\n      const comments = response.data;\r\n      const nestedComments = nestComments(comments);\r\n      setComments(nestedComments);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const nestComments = (comments) => {\r\n    const commentMap = {};\r\n    comments.forEach((comment) => (commentMap[comment.id] = comment));\r\n    const nestedComments = [];\r\n    comments.forEach((comment) => {\r\n      if (comment.parent_id !== null) {\r\n        const parent = commentMap[comment.parent_id];\r\n        parent.replies = parent.replies || [];\r\n        parent.replies.push(comment);\r\n      } else {\r\n        nestedComments.push(comment);\r\n      }\r\n    });\r\n    return nestedComments;\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchComments();\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:9999/users\")\r\n      .then((response) => {\r\n        setUsers(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Form onSubmit={handleSave} className=\"my-3\">\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicComment\">\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Comment here......\"\r\n            value={comment}\r\n            onChange={(e) => setComment(e.target.value)}\r\n            required\r\n          />\r\n        </Form.Group>\r\n      </Form>\r\n\r\n      <ul className=\"comment-list\" style={{ color: \"white\" }}>\r\n        {comments.map((comment) => (\r\n          <CommentItem\r\n            key={comment.id}\r\n            comment={comment}\r\n            users={users}\r\n            userId={userId}\r\n            handleEdit={handleEdit}\r\n            handleDelete={handleDelete}\r\n            handleUpdate={handleUpdate}\r\n            setEditCommentId={setEditCommentId}\r\n            editCommentId={editCommentId}\r\n            editCommentContent={editCommentContent}\r\n            setEditCommentContent={setEditCommentContent}\r\n            setReplyCommentId={setReplyCommentId}\r\n            replyCommentId={replyCommentId}\r\n            replyContent={replyContent}\r\n            setReplyContent={setReplyContent}\r\n            handleReplySave={handleReplySave}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst CommentItem = ({\r\n  comment,\r\n  users,\r\n  userId,\r\n  handleEdit,\r\n  handleDelete,\r\n  handleUpdate,\r\n  setEditCommentId,\r\n  editCommentId,\r\n  editCommentContent,\r\n  setEditCommentContent,\r\n  setReplyCommentId,\r\n  replyCommentId,\r\n  replyContent,\r\n  setReplyContent,\r\n  handleReplySave,\r\n}) => {\r\n  const user = users.find((user) => user.id === comment.user_id);\r\n  const isUserComment = userId === comment.user_id;\r\n\r\n  return (\r\n    <li className=\"comment-item\" key={comment.id}>\r\n      <img src=\"../images/defaultuser.png\" alt=\"avatar\" />\r\n      <div className=\"comment-infor\">\r\n        <p style={{ color: \"aqua\" }}>{user ? user.name : \"Unknown User\"}</p>\r\n        {editCommentId === comment.id ? (\r\n          <Form onSubmit={handleUpdate}>\r\n            <Form.Group controlId=\"formEditComment\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={editCommentContent}\r\n                onChange={(e) => setEditCommentContent(e.target.value)}\r\n                required\r\n              />\r\n            </Form.Group>\r\n            <Button type=\"submit\">Save</Button>\r\n            <Button onClick={() => setEditCommentId(null)}>Cancel</Button>\r\n          </Form>\r\n        ) : (\r\n          <p>{comment.content}</p>\r\n        )}\r\n        {isUserComment && (\r\n          <>\r\n            <Row>\r\n              <Col>\r\n                <Link\r\n                  style={{ marginRight: \"10px\" }}\r\n                  onClick={() => handleEdit(comment)}\r\n                >\r\n                  Edit\r\n                </Link>\r\n                <Link onClick={() => handleDelete(comment.id)}>Delete</Link>\r\n              </Col>\r\n            </Row>\r\n          </>\r\n        )}\r\n        <Link onClick={() => setReplyCommentId(comment.id)}>Reply</Link>\r\n        {replyCommentId === comment.id && (\r\n          <Form onSubmit={handleReplySave}>\r\n            <Form.Group controlId=\"formReplyComment\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Reply here...\"\r\n                value={replyContent}\r\n                onChange={(e) => setReplyContent(e.target.value)}\r\n                required\r\n              />\r\n            </Form.Group>\r\n            <Button type=\"submit\">Post Reply</Button>\r\n          </Form>\r\n        )}\r\n        {comment.replies && (\r\n          <ul className=\"comment-list\" style={{ marginLeft: \"20px\" }}>\r\n            {comment.replies.map((reply) => (\r\n              <CommentItem\r\n                key={reply.id}\r\n                comment={reply}\r\n                users={users}\r\n                userId={userId}\r\n                handleEdit={handleEdit}\r\n                handleDelete={handleDelete}\r\n                handleUpdate={handleUpdate}\r\n                setEditCommentId={setEditCommentId}\r\n                editCommentId={editCommentId}\r\n                editCommentContent={editCommentContent}\r\n                setEditCommentContent={setEditCommentContent}\r\n                setReplyCommentId={setReplyCommentId}\r\n                replyCommentId={replyCommentId}\r\n                replyContent={replyContent}\r\n                setReplyContent={setReplyContent}\r\n                handleReplySave={handleReplySave}\r\n              />\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Comment;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}