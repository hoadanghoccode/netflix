{"ast":null,"code":"var _jsxFileName = \"D:\\\\semester5\\\\fer\\\\Project\\\\src\\\\components\\\\Newfilm.js\";\nimport React from \"react\";\nimport { Card, Carousel, Col, Container, Row } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Newfilm = () => {\n  const cards = [{\n    id: 1,\n    title: \"Card 1\",\n    text: \"This is the first card.\",\n    image: \"https://via.placeholder.com/300x200\"\n  }, {\n    id: 2,\n    title: \"Card 2\",\n    text: \"This is the second card.\",\n    image: \"https://via.placeholder.com/300x200\"\n  }, {\n    id: 3,\n    title: \"Card 3\",\n    text: \"This is the third card.\",\n    image: \"https://via.placeholder.com/300x200\"\n  }, {\n    id: 4,\n    title: \"Card 4\",\n    text: \"This is the fourth card.\",\n    image: \"https://via.placeholder.com/300x200\"\n  }, {\n    id: 5,\n    title: \"Card 5\",\n    text: \"This is the fifth card.\",\n    image: \"https://via.placeholder.com/300x200\"\n  }, {\n    id: 6,\n    title: \"Card 6\",\n    text: \"This is the sixth card.\",\n    image: \"https://via.placeholder.com/300x200\"\n  }];\n  const chunkArray = (arr, size) => {\n    const result = [];\n    for (let i = 0; i < arr.length; i += size) {\n      result.push(arr.slice(i, i + size));\n    }\n    return result;\n  };\n  const cardChunks = chunkArray(cards, 3); // Adjust the number 3 to display more or fewer cards per slide\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"my-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Phim \\u0111ang chi\\u1EBFu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-slider-container\",\n        children: /*#__PURE__*/_jsxDEV(Carousel, {\n          controls: true,\n          indicators: false,\n          children: cardChunks.map((chunk, index) => /*#__PURE__*/_jsxDEV(Carousel.Item, {\n            children: /*#__PURE__*/_jsxDEV(Container, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: chunk.map(card => /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 4,\n                  children: /*#__PURE__*/_jsxDEV(Card, {\n                    className: \"card\",\n                    children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                      variant: \"top\",\n                      src: card.image,\n                      alt: card.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 67,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                        children: card.title\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 69,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                        children: card.text\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 70,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 68,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 66,\n                    columnNumber: 41\n                  }, this)\n                }, card.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 37\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 25\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = Newfilm;\nexport default Newfilm;\nvar _c;\n$RefreshReg$(_c, \"Newfilm\");","map":{"version":3,"names":["React","Card","Carousel","Col","Container","Row","jsxDEV","_jsxDEV","Fragment","_Fragment","Newfilm","cards","id","title","text","image","chunkArray","arr","size","result","i","length","push","slice","cardChunks","children","className","fileName","_jsxFileName","lineNumber","columnNumber","controls","indicators","map","chunk","index","Item","card","sm","Img","variant","src","alt","Body","Title","Text","_c","$RefreshReg$"],"sources":["D:/semester5/fer/Project/src/components/Newfilm.js"],"sourcesContent":["import React from \"react\";\r\nimport { Card, Carousel, Col, Container, Row } from \"react-bootstrap\";\r\n\r\nconst Newfilm = () => {\r\n  const cards = [\r\n    {\r\n      id: 1,\r\n      title: \"Card 1\",\r\n      text: \"This is the first card.\",\r\n      image: \"https://via.placeholder.com/300x200\",\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"Card 2\",\r\n      text: \"This is the second card.\",\r\n      image: \"https://via.placeholder.com/300x200\",\r\n    },\r\n    {\r\n      id: 3,\r\n      title: \"Card 3\",\r\n      text: \"This is the third card.\",\r\n      image: \"https://via.placeholder.com/300x200\",\r\n    },\r\n    {\r\n      id: 4,\r\n      title: \"Card 4\",\r\n      text: \"This is the fourth card.\",\r\n      image: \"https://via.placeholder.com/300x200\",\r\n    },\r\n    {\r\n      id: 5,\r\n      title: \"Card 5\",\r\n      text: \"This is the fifth card.\",\r\n      image: \"https://via.placeholder.com/300x200\",\r\n    },\r\n    {\r\n      id: 6,\r\n      title: \"Card 6\",\r\n      text: \"This is the sixth card.\",\r\n      image: \"https://via.placeholder.com/300x200\",\r\n    },\r\n  ];\r\n\r\n  const chunkArray = (arr, size) => {\r\n    const result = [];\r\n    for (let i = 0; i < arr.length; i += size) {\r\n      result.push(arr.slice(i, i + size));\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const cardChunks = chunkArray(cards, 3); // Adjust the number 3 to display more or fewer cards per slide\r\n\r\n  return (\r\n    <>\r\n      <Container className=\"my-4\">\r\n        <h1>Phim đang chiếu</h1>\r\n        <div className=\"card-slider-container\">\r\n            <Carousel controls={true} indicators={false}>\r\n                {cardChunks.map((chunk, index) => (\r\n                    <Carousel.Item key={index}>\r\n                        <Container>\r\n                            <Row>\r\n                                {chunk.map(card => (\r\n                                    <Col key={card.id} sm={4}>\r\n                                        <Card className=\"card\">\r\n                                            <Card.Img variant=\"top\" src={card.image} alt={card.title} />\r\n                                            <Card.Body>\r\n                                                <Card.Title>{card.title}</Card.Title>\r\n                                                <Card.Text>{card.text}</Card.Text>\r\n                                            </Card.Body>\r\n                                        </Card>\r\n                                    </Col>\r\n                                ))}\r\n                            </Row>\r\n                        </Container>\r\n                    </Carousel.Item>\r\n                ))}\r\n            </Carousel>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Newfilm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}