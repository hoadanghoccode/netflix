{"ast":null,"code":"var _jsxFileName = \"D:\\\\semester5\\\\fer\\\\Project\\\\src\\\\components\\\\Comment.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Col, Container, Form, Row } from \"react-bootstrap\";\nimport { Link, useParams } from \"react-router-dom\";\nimport useAuth from \"../hooks/useAuth\";\nimport \"../css/comment.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Comment = () => {\n  _s();\n  const [comment, setComment] = useState(\"\");\n  const [comments, setComments] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [editCommentId, setEditCommentId] = useState(null);\n  const [editCommentContent, setEditCommentContent] = useState(\"\");\n  const {\n    id\n  } = useParams();\n  const {\n    userId\n  } = useAuth();\n  const [replyCommentId, setReplyCommentId] = useState(null);\n  const [replyContent, setReplyContent] = useState(\"\");\n  const getUserIdFromLocalStorage = () => {\n    return localStorage.getItem(\"userId\");\n  };\n  const handleSave = async e => {\n    e.preventDefault();\n    if (getUserIdFromLocalStorage() == null) {\n      alert(\"You need login to comment\");\n    } else {\n      try {\n        const response = await axios.post(\"http://localhost:9999/comments\", {\n          user_id: userId,\n          blog_id: parseInt(id),\n          content: comment,\n          parent_id: null\n        });\n        console.log(\"New comment created:\", response.data);\n        setComment(\"\");\n        setComments(prevComments => [...prevComments, response.data]);\n      } catch (error) {\n        console.error(\"There was a problem with the axios operation:\", error);\n      }\n    }\n  };\n  const handleReplySave = async e => {\n    e.preventDefault();\n    if (getUserIdFromLocalStorage() == null) {\n      alert(\"You need login to comment\");\n    } else {\n      try {\n        const response = await axios.post(\"http://localhost:9999/comments\", {\n          user_id: userId,\n          blog_id: parseInt(id),\n          content: replyContent,\n          parent_id: replyCommentId\n        });\n        console.log(\"New reply created:\", response.data);\n        setReplyContent(\"\");\n        setReplyCommentId(null);\n        setComments(prevComments => addReply(prevComments, response.data));\n      } catch (error) {\n        console.error(\"There was a problem with the axios operation:\", error);\n      }\n    }\n  };\n  const addReply = (comments, newReply) => {\n    return comments.map(comment => {\n      if (comment.id === newReply.parent_id) {\n        return {\n          ...comment,\n          replies: comment.replies ? [...comment.replies, newReply] : [newReply]\n        };\n      }\n      if (comment.replies) {\n        return {\n          ...comment,\n          replies: addReply(comment.replies, newReply)\n        };\n      }\n      return comment;\n    });\n  };\n  const handleDelete = async commentId => {\n    if (window.confirm(\"Are you sure you want to delete this comment?\")) {\n      try {\n        await axios.delete(`http://localhost:9999/comments/${commentId}`);\n        console.log(\"Comment deleted\");\n        setComments(prevComments => removeComment(prevComments, commentId));\n      } catch (error) {\n        console.error(\"There was a problem with the axios operation:\", error);\n      }\n    }\n  };\n  const removeComment = (comments, commentId) => {\n    return comments.filter(comment => comment.id !== commentId).map(comment => {\n      if (comment.replies) {\n        return {\n          ...comment,\n          replies: removeComment(comment.replies, commentId)\n        };\n      }\n      return comment;\n    });\n  };\n  const handleEdit = comment => {\n    setEditCommentId(comment.id);\n    setEditCommentContent(comment.content);\n  };\n  const handleUpdate = async e => {\n    e.preventDefault();\n    try {\n      await axios.put(`http://localhost:9999/comments/${editCommentId}`, {\n        user_id: userId,\n        blog_id: parseInt(id),\n        content: editCommentContent\n      });\n      console.log(\"Comment updated\");\n      setEditCommentId(null);\n      setEditCommentContent(\"\");\n      setComments(prevComments => updateComment(prevComments, editCommentId, editCommentContent));\n    } catch (error) {\n      console.error(\"There was a problem with the axios operation:\", error);\n    }\n  };\n  const updateComment = (comments, commentId, content) => {\n    return comments.map(comment => {\n      if (comment.id === commentId) {\n        return {\n          ...comment,\n          content\n        };\n      }\n      if (comment.replies) {\n        return {\n          ...comment,\n          replies: updateComment(comment.replies, commentId, content)\n        };\n      }\n      return comment;\n    });\n  };\n  const fetchComments = async () => {\n    try {\n      const response = await axios.get(`http://localhost:9999/comments/?blog_id=${id}`);\n      const comments = response.data;\n      const nestedComments = nestComments(comments);\n      setComments(nestedComments);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const nestComments = comments => {\n    const commentMap = {};\n    comments.forEach(comment => commentMap[comment.id] = comment);\n    const nestedComments = [];\n    comments.forEach(comment => {\n      if (comment.parent_id !== null) {\n        const parent = commentMap[comment.parent_id];\n        parent.replies = parent.replies || [];\n        parent.replies.push(comment);\n      } else {\n        nestedComments.push(comment);\n      }\n    });\n    return nestedComments;\n  };\n  useEffect(() => {\n    fetchComments();\n  }, [id]);\n  useEffect(() => {\n    axios.get(\"http://localhost:9999/users\").then(response => {\n      setUsers(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSave,\n      className: \"my-3\",\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicComment\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Comment here......\",\n          value: comment,\n          onChange: e => setComment(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"comment-list\",\n      style: {\n        color: \"white\"\n      },\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(CommentItem, {\n        comment: comment,\n        users: users,\n        userId: userId,\n        handleEdit: handleEdit,\n        handleDelete: handleDelete,\n        handleUpdate: handleUpdate,\n        setEditCommentId: setEditCommentId,\n        editCommentId: editCommentId,\n        editCommentContent: editCommentContent,\n        setEditCommentContent: setEditCommentContent,\n        setReplyCommentId: setReplyCommentId,\n        replyCommentId: replyCommentId,\n        replyContent: replyContent,\n        setReplyContent: setReplyContent,\n        handleReplySave: handleReplySave\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n};\n_s(Comment, \"ypTyiu8Ukb+6pvm/Sg4JwcV73fM=\", false, function () {\n  return [useParams, useAuth];\n});\n_c = Comment;\nconst CommentItem = ({\n  comment,\n  users,\n  userId,\n  handleEdit,\n  handleDelete,\n  handleUpdate,\n  setEditCommentId,\n  editCommentId,\n  editCommentContent,\n  setEditCommentContent,\n  setReplyCommentId,\n  replyCommentId,\n  replyContent,\n  setReplyContent,\n  handleReplySave\n}) => {\n  const user = users.find(user => user.id === comment.user_id);\n  const isUserComment = userId === comment.user_id;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"comment-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"../images/defaultuser.png\",\n      alt: \"avatar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-infor\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"aqua\"\n        },\n        children: user ? user.name : \"Unknown User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), editCommentId === comment.id ? /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleUpdate,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formEditComment\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: editCommentContent,\n            onChange: e => setEditCommentContent(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setEditCommentId(null),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: comment.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }, this), isUserComment && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              style: {\n                marginRight: \"10px\"\n              },\n              onClick: () => handleEdit(comment),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              onClick: () => handleDelete(comment.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(Link, {\n        onClick: () => setReplyCommentId(comment.id),\n        children: \"Reply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), replyCommentId === comment.id && /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleReplySave,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formReplyComment\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Reply here...\",\n            value: replyContent,\n            onChange: e => setReplyContent(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Post Reply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }, this), comment.replies && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"comment-list\",\n        style: {\n          marginLeft: \"20px\"\n        },\n        children: comment.replies.map(reply => /*#__PURE__*/_jsxDEV(CommentItem, {\n          comment: reply,\n          users: users,\n          userId: userId,\n          handleEdit: handleEdit,\n          handleDelete: handleDelete,\n          handleUpdate: handleUpdate,\n          setEditCommentId: setEditCommentId,\n          editCommentId: editCommentId,\n          editCommentContent: editCommentContent,\n          setEditCommentContent: setEditCommentContent,\n          setReplyCommentId: setReplyCommentId,\n          replyCommentId: replyCommentId,\n          replyContent: replyContent,\n          setReplyContent: setReplyContent,\n          handleReplySave: handleReplySave\n        }, reply.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this)]\n  }, comment.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 250,\n    columnNumber: 5\n  }, this);\n};\n_c2 = CommentItem;\nexport default Comment;\nvar _c, _c2;\n$RefreshReg$(_c, \"Comment\");\n$RefreshReg$(_c2, \"CommentItem\");","map":{"version":3,"names":["axios","React","useEffect","useState","Button","Col","Container","Form","Row","Link","useParams","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","Comment","_s","comment","setComment","comments","setComments","users","setUsers","editCommentId","setEditCommentId","editCommentContent","setEditCommentContent","id","userId","replyCommentId","setReplyCommentId","replyContent","setReplyContent","getUserIdFromLocalStorage","localStorage","getItem","handleSave","e","preventDefault","alert","response","post","user_id","blog_id","parseInt","content","parent_id","console","log","data","prevComments","error","handleReplySave","addReply","newReply","map","replies","handleDelete","commentId","window","confirm","delete","removeComment","filter","handleEdit","handleUpdate","put","updateComment","fetchComments","get","nestedComments","nestComments","commentMap","forEach","parent","push","then","catch","children","onSubmit","className","Group","controlId","Control","type","placeholder","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","style","color","CommentItem","_c","user","find","isUserComment","src","alt","name","onClick","marginRight","marginLeft","reply","_c2","$RefreshReg$"],"sources":["D:/semester5/fer/Project/src/components/Comment.js"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Button, Col, Container, Form, Row } from \"react-bootstrap\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport useAuth from \"../hooks/useAuth\";\r\nimport \"../css/comment.css\";\r\n\r\nconst Comment = () => {\r\n  const [comment, setComment] = useState(\"\");\r\n  const [comments, setComments] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [editCommentId, setEditCommentId] = useState(null);\r\n  const [editCommentContent, setEditCommentContent] = useState(\"\");\r\n  const { id } = useParams();\r\n  const { userId } = useAuth();\r\n  const [replyCommentId, setReplyCommentId] = useState(null);\r\n  const [replyContent, setReplyContent] = useState(\"\");\r\n\r\n  const getUserIdFromLocalStorage = () => {\r\n    return localStorage.getItem(\"userId\");\r\n  };\r\n\r\n  const handleSave = async (e) => {\r\n    e.preventDefault();\r\n    if (getUserIdFromLocalStorage() == null) {\r\n      alert(\"You need login to comment\");\r\n    } else {\r\n      try {\r\n        const response = await axios.post(\"http://localhost:9999/comments\", {\r\n          user_id: userId,\r\n          blog_id: parseInt(id),\r\n          content: comment,\r\n          parent_id: null,\r\n        });\r\n        console.log(\"New comment created:\", response.data);\r\n        setComment(\"\");\r\n        setComments((prevComments) => [...prevComments, response.data]);\r\n      } catch (error) {\r\n        console.error(\"There was a problem with the axios operation:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleReplySave = async (e) => {\r\n    e.preventDefault();\r\n    if (getUserIdFromLocalStorage() == null) {\r\n      alert(\"You need login to comment\");\r\n    } else {\r\n      try {\r\n        const response = await axios.post(\"http://localhost:9999/comments\", {\r\n          user_id: userId,\r\n          blog_id: parseInt(id),\r\n          content: replyContent,\r\n          parent_id: replyCommentId,\r\n        });\r\n        console.log(\"New reply created:\", response.data);\r\n        setReplyContent(\"\");\r\n        setReplyCommentId(null);\r\n        setComments((prevComments) => addReply(prevComments, response.data));\r\n      } catch (error) {\r\n        console.error(\"There was a problem with the axios operation:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const addReply = (comments, newReply) => {\r\n    return comments.map((comment) => {\r\n      if (comment.id === newReply.parent_id) {\r\n        return {\r\n          ...comment,\r\n          replies: comment.replies ? [...comment.replies, newReply] : [newReply],\r\n        };\r\n      }\r\n      if (comment.replies) {\r\n        return {\r\n          ...comment,\r\n          replies: addReply(comment.replies, newReply),\r\n        };\r\n      }\r\n      return comment;\r\n    });\r\n  };\r\n\r\n  const handleDelete = async (commentId) => {\r\n    if (window.confirm(\"Are you sure you want to delete this comment?\")) {\r\n      try {\r\n        await axios.delete(`http://localhost:9999/comments/${commentId}`);\r\n        console.log(\"Comment deleted\");\r\n        setComments((prevComments) => removeComment(prevComments, commentId));\r\n      } catch (error) {\r\n        console.error(\"There was a problem with the axios operation:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const removeComment = (comments, commentId) => {\r\n    return comments\r\n      .filter((comment) => comment.id !== commentId)\r\n      .map((comment) => {\r\n        if (comment.replies) {\r\n          return {\r\n            ...comment,\r\n            replies: removeComment(comment.replies, commentId),\r\n          };\r\n        }\r\n        return comment;\r\n      });\r\n  };\r\n\r\n  const handleEdit = (comment) => {\r\n    setEditCommentId(comment.id);\r\n    setEditCommentContent(comment.content);\r\n  };\r\n\r\n  const handleUpdate = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.put(`http://localhost:9999/comments/${editCommentId}`, {\r\n        user_id: userId,\r\n        blog_id: parseInt(id),\r\n        content: editCommentContent,\r\n      });\r\n      console.log(\"Comment updated\");\r\n      setEditCommentId(null);\r\n      setEditCommentContent(\"\");\r\n      setComments((prevComments) => updateComment(prevComments, editCommentId, editCommentContent));\r\n    } catch (error) {\r\n      console.error(\"There was a problem with the axios operation:\", error);\r\n    }\r\n  };\r\n\r\n  const updateComment = (comments, commentId, content) => {\r\n    return comments.map((comment) => {\r\n      if (comment.id === commentId) {\r\n        return { ...comment, content };\r\n      }\r\n      if (comment.replies) {\r\n        return {\r\n          ...comment,\r\n          replies: updateComment(comment.replies, commentId, content),\r\n        };\r\n      }\r\n      return comment;\r\n    });\r\n  };\r\n\r\n  const fetchComments = async () => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:9999/comments/?blog_id=${id}`);\r\n      const comments = response.data;\r\n      const nestedComments = nestComments(comments);\r\n      setComments(nestedComments);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const nestComments = (comments) => {\r\n    const commentMap = {};\r\n    comments.forEach((comment) => (commentMap[comment.id] = comment));\r\n    const nestedComments = [];\r\n    comments.forEach((comment) => {\r\n      if (comment.parent_id !== null) {\r\n        const parent = commentMap[comment.parent_id];\r\n        parent.replies = parent.replies || [];\r\n        parent.replies.push(comment);\r\n      } else {\r\n        nestedComments.push(comment);\r\n      }\r\n    });\r\n    return nestedComments;\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchComments();\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:9999/users\")\r\n      .then((response) => {\r\n        setUsers(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Form onSubmit={handleSave} className=\"my-3\">\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicComment\">\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Comment here......\"\r\n            value={comment}\r\n            onChange={(e) => setComment(e.target.value)}\r\n            required\r\n          />\r\n        </Form.Group>\r\n      </Form>\r\n\r\n      <ul className=\"comment-list\" style={{ color: \"white\" }}>\r\n        {comments.map((comment) => (\r\n          <CommentItem\r\n            key={comment.id}\r\n            comment={comment}\r\n            users={users}\r\n            userId={userId}\r\n            handleEdit={handleEdit}\r\n            handleDelete={handleDelete}\r\n            handleUpdate={handleUpdate}\r\n            setEditCommentId={setEditCommentId}\r\n            editCommentId={editCommentId}\r\n            editCommentContent={editCommentContent}\r\n            setEditCommentContent={setEditCommentContent}\r\n            setReplyCommentId={setReplyCommentId}\r\n            replyCommentId={replyCommentId}\r\n            replyContent={replyContent}\r\n            setReplyContent={setReplyContent}\r\n            handleReplySave={handleReplySave}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst CommentItem = ({\r\n  comment,\r\n  users,\r\n  userId,\r\n  handleEdit,\r\n  handleDelete,\r\n  handleUpdate,\r\n  setEditCommentId,\r\n  editCommentId,\r\n  editCommentContent,\r\n  setEditCommentContent,\r\n  setReplyCommentId,\r\n  replyCommentId,\r\n  replyContent,\r\n  setReplyContent,\r\n  handleReplySave,\r\n}) => {\r\n  const user = users.find((user) => user.id === comment.user_id);\r\n  const isUserComment = userId === comment.user_id;\r\n\r\n  return (\r\n    <li className=\"comment-item\" key={comment.id}>\r\n      <img src=\"../images/defaultuser.png\" alt=\"avatar\" />\r\n      <div className=\"comment-infor\">\r\n        <p style={{ color: \"aqua\" }}>{user ? user.name : \"Unknown User\"}</p>\r\n        {editCommentId === comment.id ? (\r\n          <Form onSubmit={handleUpdate}>\r\n            <Form.Group controlId=\"formEditComment\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={editCommentContent}\r\n                onChange={(e) => setEditCommentContent(e.target.value)}\r\n                required\r\n              />\r\n            </Form.Group>\r\n            <Button type=\"submit\">Save</Button>\r\n            <Button onClick={() => setEditCommentId(null)}>Cancel</Button>\r\n          </Form>\r\n        ) : (\r\n          <p>{comment.content}</p>\r\n        )}\r\n        {isUserComment && (\r\n          <>\r\n            <Row>\r\n              <Col>\r\n                <Link\r\n                  style={{ marginRight: \"10px\" }}\r\n                  onClick={() => handleEdit(comment)}\r\n                >\r\n                  Edit\r\n                </Link>\r\n                <Link onClick={() => handleDelete(comment.id)}>Delete</Link>\r\n              </Col>\r\n            </Row>\r\n          </>\r\n        )}\r\n        <Link onClick={() => setReplyCommentId(comment.id)}>Reply</Link>\r\n        {replyCommentId === comment.id && (\r\n          <Form onSubmit={handleReplySave}>\r\n            <Form.Group controlId=\"formReplyComment\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Reply here...\"\r\n                value={replyContent}\r\n                onChange={(e) => setReplyContent(e.target.value)}\r\n                required\r\n              />\r\n            </Form.Group>\r\n            <Button type=\"submit\">Post Reply</Button>\r\n          </Form>\r\n        )}\r\n        {comment.replies && (\r\n          <ul className=\"comment-list\" style={{ marginLeft: \"20px\" }}>\r\n            {comment.replies.map((reply) => (\r\n              <CommentItem\r\n                key={reply.id}\r\n                comment={reply}\r\n                users={users}\r\n                userId={userId}\r\n                handleEdit={handleEdit}\r\n                handleDelete={handleDelete}\r\n                handleUpdate={handleUpdate}\r\n                setEditCommentId={setEditCommentId}\r\n                editCommentId={editCommentId}\r\n                editCommentContent={editCommentContent}\r\n                setEditCommentContent={setEditCommentContent}\r\n                setReplyCommentId={setReplyCommentId}\r\n                replyCommentId={replyCommentId}\r\n                replyContent={replyContent}\r\n                setReplyContent={setReplyContent}\r\n                handleReplySave={handleReplySave}\r\n              />\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Comment;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}