{"ast":null,"code":"var _jsxFileName = \"D:\\\\semester5\\\\fer\\\\Project\\\\src\\\\components\\\\Listfilm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FilmList = () => {\n  _s();\n  const [films, setFilms] = useState([]);\n  const [page, setPage] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const observer = useRef();\n  const filmNames = [1];\n  useEffect(() => {\n    setPage(0); // Reset page when filmNames changes\n    setFilms([]); // Clear current films\n  }, [filmNames]);\n  const fetchFilms = useCallback(async () => {\n    if (loading) return; // Prevent multiple concurrent fetches\n    setLoading(true);\n    try {\n      const response = await axios.get(`https://phim.nguonc.com/api/films/quoc-gia/au-my?page=${filmNames[page]}`);\n      setFilms(prevFilms => [...prevFilms, ...response.data.items]);\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  }, [filmNames, page, loading]);\n  useEffect(() => {\n    if (page < filmNames.length) {\n      fetchFilms();\n    }\n  }, [page, fetchFilms]);\n  const lastFilmElementRef = useCallback(node => {\n    if (loading) return;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && page < filmNames.length - 1) {\n        setPage(prevPage => prevPage + 1);\n      }\n    });\n    if (node) observer.current.observe(node);\n  }, [loading, page, filmNames.length]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Film List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: films.map((film, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        ref: index === films.length - 1 ? lastFilmElementRef : null,\n        children: film.title\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading more films...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(FilmList, \"Kg39v/7tUsqyQRFg32DzJ4YyHNg=\");\n_c = FilmList;\nexport default FilmList;\nvar _c;\n$RefreshReg$(_c, \"FilmList\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","axios","jsxDEV","_jsxDEV","FilmList","_s","films","setFilms","page","setPage","loading","setLoading","observer","filmNames","fetchFilms","response","get","prevFilms","data","items","error","console","log","length","lastFilmElementRef","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevPage","observe","children","fileName","_jsxFileName","lineNumber","columnNumber","map","film","index","ref","title","_c","$RefreshReg$"],"sources":["D:/semester5/fer/Project/src/components/Listfilm.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst FilmList = () => {\r\n  const [films, setFilms] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const observer = useRef();\r\n  const filmNames = [1, ];\r\n\r\n  useEffect(() => {\r\n    setPage(0); // Reset page when filmNames changes\r\n    setFilms([]); // Clear current films\r\n  }, [filmNames]);\r\n\r\n  const fetchFilms = useCallback(async () => {\r\n    if (loading) return; // Prevent multiple concurrent fetches\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.get(\r\n        `https://phim.nguonc.com/api/films/quoc-gia/au-my?page=${filmNames[page]}`\r\n      );\r\n      setFilms((prevFilms) => [...prevFilms, ...response.data.items]);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setLoading(false);\r\n    }\r\n  }, [filmNames, page, loading]);\r\n\r\n  useEffect(() => {\r\n    if (page < filmNames.length) {\r\n      fetchFilms();\r\n    }\r\n  }, [page, fetchFilms]);\r\n\r\n  const lastFilmElementRef = useCallback(\r\n    (node) => {\r\n      if (loading) return;\r\n      if (observer.current) observer.current.disconnect();\r\n      observer.current = new IntersectionObserver((entries) => {\r\n        if (entries[0].isIntersecting && page < filmNames.length - 1) {\r\n          setPage((prevPage) => prevPage + 1);\r\n        }\r\n      });\r\n      if (node) observer.current.observe(node);\r\n    },\r\n    [loading, page, filmNames.length]\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <h1>Film List</h1>\r\n      <ul>\r\n        {films.map((film, index) => (\r\n          <li\r\n            key={index}\r\n            ref={index === films.length - 1 ? lastFilmElementRef : null}\r\n          >\r\n            {film.title}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      {loading && <p>Loading more films...</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilmList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}