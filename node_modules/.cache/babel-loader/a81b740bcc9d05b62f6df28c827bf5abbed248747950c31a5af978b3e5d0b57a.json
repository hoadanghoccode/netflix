{"ast":null,"code":"import React from \"react\";\nimport { Card, Carousel, Col, Container, Row } from \"react-bootstrap\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Newfilm = () => {\n  const cards = [{\n    id: 1,\n    title: \"Card 1\",\n    text: \"This is the first card.\",\n    image: \"https://via.placeholder.com/300x200\"\n  }, {\n    id: 2,\n    title: \"Card 2\",\n    text: \"This is the second card.\",\n    image: \"https://via.placeholder.com/300x200\"\n  }, {\n    id: 3,\n    title: \"Card 3\",\n    text: \"This is the third card.\",\n    image: \"https://via.placeholder.com/300x200\"\n  }, {\n    id: 4,\n    title: \"Card 4\",\n    text: \"This is the fourth card.\",\n    image: \"https://via.placeholder.com/300x200\"\n  }, {\n    id: 5,\n    title: \"Card 5\",\n    text: \"This is the fifth card.\",\n    image: \"https://via.placeholder.com/300x200\"\n  }, {\n    id: 6,\n    title: \"Card 6\",\n    text: \"This is the sixth card.\",\n    image: \"https://via.placeholder.com/300x200\"\n  }];\n  const chunkArray = (arr, size) => {\n    const result = [];\n    for (let i = 0; i < arr.length; i += size) {\n      result.push(arr.slice(i, i + size));\n    }\n    return result;\n  };\n  const cardChunks = chunkArray(cards, 3); // Adjust the number 3 to display more or fewer cards per slide\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_c = Newfilm;\nexport default Newfilm;\nvar _c;\n$RefreshReg$(_c, \"Newfilm\");","map":{"version":3,"names":["React","Card","Carousel","Col","Container","Row","Fragment","_Fragment","jsxDEV","_jsxDEV","Newfilm","cards","id","title","text","image","chunkArray","arr","size","result","i","length","push","slice","cardChunks","_c","$RefreshReg$"],"sources":["D:/semester5/fer/Project/src/components/Newfilm.js"],"sourcesContent":["import React from \"react\";\r\nimport { Card, Carousel, Col, Container, Row } from \"react-bootstrap\";\r\n\r\nconst Newfilm = () => {\r\n  const cards = [\r\n    {\r\n      id: 1,\r\n      title: \"Card 1\",\r\n      text: \"This is the first card.\",\r\n      image: \"https://via.placeholder.com/300x200\",\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"Card 2\",\r\n      text: \"This is the second card.\",\r\n      image: \"https://via.placeholder.com/300x200\",\r\n    },\r\n    {\r\n      id: 3,\r\n      title: \"Card 3\",\r\n      text: \"This is the third card.\",\r\n      image: \"https://via.placeholder.com/300x200\",\r\n    },\r\n    {\r\n      id: 4,\r\n      title: \"Card 4\",\r\n      text: \"This is the fourth card.\",\r\n      image: \"https://via.placeholder.com/300x200\",\r\n    },\r\n    {\r\n      id: 5,\r\n      title: \"Card 5\",\r\n      text: \"This is the fifth card.\",\r\n      image: \"https://via.placeholder.com/300x200\",\r\n    },\r\n    {\r\n      id: 6,\r\n      title: \"Card 6\",\r\n      text: \"This is the sixth card.\",\r\n      image: \"https://via.placeholder.com/300x200\",\r\n    },\r\n  ];\r\n\r\n  const chunkArray = (arr, size) => {\r\n    const result = [];\r\n    for (let i = 0; i < arr.length; i += size) {\r\n      result.push(arr.slice(i, i + size));\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const cardChunks = chunkArray(cards, 3); // Adjust the number 3 to display more or fewer cards per slide\r\n\r\n  return (\r\n    <>\r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default Newfilm;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,QAAQ,EAAEC,GAAG,EAAEC,SAAS,EAAEC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtE,MAAMC,OAAO,GAAGA,CAAA,KAAM;EACpB,MAAMC,KAAK,GAAG,CACZ;IACEC,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,QAAQ;IACfC,IAAI,EAAE,yBAAyB;IAC/BC,KAAK,EAAE;EACT,CAAC,EACD;IACEH,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,QAAQ;IACfC,IAAI,EAAE,0BAA0B;IAChCC,KAAK,EAAE;EACT,CAAC,EACD;IACEH,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,QAAQ;IACfC,IAAI,EAAE,yBAAyB;IAC/BC,KAAK,EAAE;EACT,CAAC,EACD;IACEH,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,QAAQ;IACfC,IAAI,EAAE,0BAA0B;IAChCC,KAAK,EAAE;EACT,CAAC,EACD;IACEH,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,QAAQ;IACfC,IAAI,EAAE,yBAAyB;IAC/BC,KAAK,EAAE;EACT,CAAC,EACD;IACEH,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,QAAQ;IACfC,IAAI,EAAE,yBAAyB;IAC/BC,KAAK,EAAE;EACT,CAAC,CACF;EAED,MAAMC,UAAU,GAAGA,CAACC,GAAG,EAAEC,IAAI,KAAK;IAChC,MAAMC,MAAM,GAAG,EAAE;IACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,GAAG,CAACI,MAAM,EAAED,CAAC,IAAIF,IAAI,EAAE;MACzCC,MAAM,CAACG,IAAI,CAACL,GAAG,CAACM,KAAK,CAACH,CAAC,EAAEA,CAAC,GAAGF,IAAI,CAAC,CAAC;IACrC;IACA,OAAOC,MAAM;EACf,CAAC;EAED,MAAMK,UAAU,GAAGR,UAAU,CAACL,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;;EAEzC,oBACEF,OAAA,CAAAF,SAAA,mBAEE,CAAC;AAEP,CAAC;AAACkB,EAAA,GAvDIf,OAAO;AAyDb,eAAeA,OAAO;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}