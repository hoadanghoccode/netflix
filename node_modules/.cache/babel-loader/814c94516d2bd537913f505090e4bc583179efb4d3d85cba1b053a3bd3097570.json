{"ast":null,"code":"var _jsxFileName = \"D:\\\\semester5\\\\fer\\\\Project\\\\src\\\\components\\\\Listfilm.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Listfilm = () => {\n  _s();\n  const [films, setFilms] = useState([]);\n  const [page, setPage] = useState(1);\n  const observer = useRef();\n  const lastFilmElementRef = useCallback(node => {\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting) {\n        setPage(prevPage => prevPage + 1);\n      }\n    });\n    if (node) observer.current.observe(node);\n  }, []);\n  useEffect(() => {\n    const fetchFilms = async () => {\n      try {\n        const response = await axios.get(`https://phim.nguonc.com/api/films/danh-sach/phim-dang-chieu?page=${page}`);\n        setFilms(prevFilms => [...prevFilms, ...response.data.items]);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchFilms();\n  }, [page]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Film List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), films.map((film, index) => {\n      if (films.length === index + 1) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: lastFilmElementRef,\n          children: film.title\n        }, film.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 20\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: film.title\n        }, film.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 20\n        }, this);\n      }\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this);\n};\n_s(Listfilm, \"fphsz/ybTcFUmIELMQYsz0ITC44=\");\n_c = Listfilm;\nexport default Listfilm;\nvar _c;\n$RefreshReg$(_c, \"Listfilm\");","map":{"version":3,"names":["axios","React","useEffect","useState","jsxDEV","_jsxDEV","Listfilm","_s","films","setFilms","page","setPage","observer","useRef","lastFilmElementRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevPage","observe","fetchFilms","response","get","prevFilms","data","items","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","map","film","index","length","ref","title","id","_c","$RefreshReg$"],"sources":["D:/semester5/fer/Project/src/components/Listfilm.js"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst Listfilm = () => {\r\n    const [films, setFilms] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const observer = useRef();\r\n  \r\n    const lastFilmElementRef = useCallback(node => {\r\n      if (observer.current) observer.current.disconnect();\r\n      observer.current = new IntersectionObserver(entries => {\r\n        if (entries[0].isIntersecting) {\r\n          setPage(prevPage => prevPage + 1);\r\n        }\r\n      });\r\n      if (node) observer.current.observe(node);\r\n    }, []);\r\n  \r\n    useEffect(() => {\r\n      const fetchFilms = async () => {\r\n        try {\r\n          const response = await axios.get(`https://phim.nguonc.com/api/films/danh-sach/phim-dang-chieu?page=${page}`);\r\n          setFilms(prevFilms => [...prevFilms, ...response.data.items]);\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      };\r\n  \r\n      fetchFilms();\r\n    }, [page]);\r\n  \r\n    return (\r\n      <div>\r\n        <h1>Film List</h1>\r\n        {films.map((film, index) => {\r\n          if (films.length === index + 1) {\r\n            return <div ref={lastFilmElementRef} key={film.id}>{film.title}</div>;\r\n          } else {\r\n            return <div key={film.id}>{film.title}</div>;\r\n          }\r\n        })}\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Listfilm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAMS,QAAQ,GAAGC,MAAM,CAAC,CAAC;EAEzB,MAAMC,kBAAkB,GAAGC,WAAW,CAACC,IAAI,IAAI;IAC7C,IAAIJ,QAAQ,CAACK,OAAO,EAAEL,QAAQ,CAACK,OAAO,CAACC,UAAU,CAAC,CAAC;IACnDN,QAAQ,CAACK,OAAO,GAAG,IAAIE,oBAAoB,CAACC,OAAO,IAAI;MACrD,IAAIA,OAAO,CAAC,CAAC,CAAC,CAACC,cAAc,EAAE;QAC7BV,OAAO,CAACW,QAAQ,IAAIA,QAAQ,GAAG,CAAC,CAAC;MACnC;IACF,CAAC,CAAC;IACF,IAAIN,IAAI,EAAEJ,QAAQ,CAACK,OAAO,CAACM,OAAO,CAACP,IAAI,CAAC;EAC1C,CAAC,EAAE,EAAE,CAAC;EAENd,SAAS,CAAC,MAAM;IACd,MAAMsB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMzB,KAAK,CAAC0B,GAAG,CAAE,oEAAmEhB,IAAK,EAAC,CAAC;QAC5GD,QAAQ,CAACkB,SAAS,IAAI,CAAC,GAAGA,SAAS,EAAE,GAAGF,QAAQ,CAACG,IAAI,CAACC,KAAK,CAAC,CAAC;MAC/D,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB;IACF,CAAC;IAEDN,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACd,IAAI,CAAC,CAAC;EAEV,oBACEL,OAAA;IAAA4B,QAAA,gBACE5B,OAAA;MAAA4B,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjB7B,KAAK,CAAC8B,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MAC1B,IAAIhC,KAAK,CAACiC,MAAM,KAAKD,KAAK,GAAG,CAAC,EAAE;QAC9B,oBAAOnC,OAAA;UAAKqC,GAAG,EAAE5B,kBAAmB;UAAAmB,QAAA,EAAgBM,IAAI,CAACI;QAAK,GAApBJ,IAAI,CAACK,EAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAmB,CAAC;MACvE,CAAC,MAAM;QACL,oBAAOhC,OAAA;UAAA4B,QAAA,EAAoBM,IAAI,CAACI;QAAK,GAApBJ,IAAI,CAACK,EAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAmB,CAAC;MAC9C;IACF,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEZ,CAAC;AAAC9B,EAAA,CAxCID,QAAQ;AAAAuC,EAAA,GAARvC,QAAQ;AA0Cd,eAAeA,QAAQ;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}