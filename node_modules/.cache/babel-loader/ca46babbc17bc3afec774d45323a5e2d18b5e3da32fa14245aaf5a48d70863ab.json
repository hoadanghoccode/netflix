{"ast":null,"code":"var _jsxFileName = \"D:\\\\semester5\\\\fer\\\\Project\\\\src\\\\components\\\\Listfilm.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport { Card, Container } from \"react-bootstrap\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Listfilm = () => {\n  _s();\n  const [films, setFilms] = useState([]);\n  const [page, setPage] = useState(1);\n  const observer = useRef();\n  const lastFilmElementRef = useCallback(node => {\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting) {\n        setPage(prevPage => prevPage + 1);\n      }\n    });\n    if (node) observer.current.observe(node);\n  }, []);\n  useEffect(() => {\n    const fetchFilms = async () => {\n      try {\n        const response = await axios.get(` https://phim.nguonc.com/api/films/quoc-gia/au-my?page=${page}`);\n        setFilms(prevFilms => [...prevFilms, ...response.data.items]);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchFilms();\n  }, [page]);\n  console.log(films);\n  console.log(page);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Film List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), films.map((film, index) => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-img-container\",\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              children: /*#__PURE__*/_jsxDEV(Card.Img, {\n                variant: \"top\",\n                src: film.thumb_url,\n                alt: film.name,\n                className: \"card-img\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-title-overlay\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/film/${card.slug}`,\n                children: /*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: card.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Listfilm, \"fphsz/ybTcFUmIELMQYsz0ITC44=\");\n_c = Listfilm;\nexport default Listfilm;\nvar _c;\n$RefreshReg$(_c, \"Listfilm\");","map":{"version":3,"names":["axios","React","useEffect","useState","useRef","useCallback","Card","Container","Header","Footer","Link","jsxDEV","_jsxDEV","Listfilm","_s","films","setFilms","page","setPage","observer","lastFilmElementRef","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevPage","observe","fetchFilms","response","get","prevFilms","data","items","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","map","film","index","className","Img","variant","src","thumb_url","alt","name","to","card","slug","Title","_c","$RefreshReg$"],"sources":["D:/semester5/fer/Project/src/components/Listfilm.js"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport { Card, Container } from \"react-bootstrap\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Listfilm = () => {\r\n  const [films, setFilms] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const observer = useRef();\r\n\r\n  const lastFilmElementRef = useCallback((node) => {\r\n    if (observer.current) observer.current.disconnect();\r\n    observer.current = new IntersectionObserver((entries) => {\r\n      if (entries[0].isIntersecting) {\r\n        setPage((prevPage) => prevPage + 1);\r\n      }\r\n    });\r\n    if (node) observer.current.observe(node);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchFilms = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          ` https://phim.nguonc.com/api/films/quoc-gia/au-my?page=${page}`\r\n        );\r\n        setFilms((prevFilms) => [...prevFilms, ...response.data.items]);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    fetchFilms();\r\n  }, [page]);\r\n\r\n  console.log(films);\r\n  console.log(page);\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Header />\r\n        <h1>Film List</h1>\r\n        {films.map((film, index) => {\r\n          return (\r\n            <Card className=\"card\">\r\n              <div className=\"card-img-container\">\r\n                <Link>\r\n                  <Card.Img\r\n                    variant=\"top\"\r\n                    src={film.thumb_url}\r\n                    alt={film.name}\r\n                    className=\"card-img\"\r\n                  />\r\n                </Link>\r\n                <div className=\"card-title-overlay\">\r\n                  <Link to={`/film/${card.slug}`}>\r\n                    <Card.Title>{card.name}</Card.Title>\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </Card>\r\n          );\r\n        })}\r\n        <Footer />\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Listfilm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}